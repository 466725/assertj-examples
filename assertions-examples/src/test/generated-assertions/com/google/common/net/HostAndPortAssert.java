package com.google.common.net;

/**
 * {@link HostAndPort} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractHostAndPortAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class HostAndPortAssert extends AbstractHostAndPortAssert<HostAndPortAssert, HostAndPort> {

  /**
   * Creates a new <code>{@link HostAndPortAssert}</code> to make assertions on actual HostAndPort.
   * @param actual the HostAndPort we want to make assertions on.
   */
  public HostAndPortAssert(HostAndPort actual) {
    super(actual, HostAndPortAssert.class);
  }

  /**
   * An entry point for HostAndPortAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myHostAndPort)</code> and get specific assertion with code completion.
   * @param actual the HostAndPort we want to make assertions on.
   * @return a new <code>{@link HostAndPortAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static HostAndPortAssert assertThat(HostAndPort actual) {
    return new HostAndPortAssert(actual);
  }
}
